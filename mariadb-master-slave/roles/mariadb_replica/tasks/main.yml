---
- name: Create the replication users
  community.mysql.mysql_user:
    name: "{{ item.name }}"
    host: "%"
    password: "{{ item.password|default('verystrong') }}"
    priv: "*.*:REPLICATION SLAVE"
    state: present
    login_user: "{{ mysql_root_user }}"
    login_password: "{{ mysql_root_password }}"
  with_items:
    - "{{ mysql_repl_user }}"
  when: inventory_hostname in groups["db_master"] and mariadb_replication_enabled

- name: Check if slave is already configured for replication
  community.mysql.mysql_replication:
    mode: getreplica
    login_user: "{{ mysql_root_user }}"
    login_password: "{{ mysql_root_password }}"
  ignore_errors: true
  register: slave_status
  when: mariadb_replication_enabled

- name: Get the current master servers replication status
  community.mysql.mysql_replication:
    mode: getprimary
    login_user: "{{ mysql_root_user }}"
    login_password: "{{ mysql_root_password }}"
  delegate_to: "{{ groups['db_master'][0] }}"
  register: master_replica_stats
  when: mariadb_replication_enabled

- name: Change the master in slave to start the replication
  community.mysql.mysql_replication:
    mode: changeprimary
    login_user: "{{ mysql_root_user }}"
    login_password: "{{ mysql_root_password }}"
    master_host: "{{ mysql_repl_master }}"
    master_log_file: "{{ master_replica_stats.File }}"
    master_log_pos: "{{ master_replica_stats.Position }}"
    master_user: "{{ mysql_repl_user[0].name }}"
    master_password: "{{ mysql_repl_user[0].pass }}"
  when: inventory_hostname in groups["db_slave"] and not slave_status.Is_Replica

- name: Start the replication
  community.mysql.mysql_replication:
    mode: startreplica
    login_user: "{{ mysql_root_user }}"
    login_password: "{{ mysql_root_password }}"
  when: inventory_hostname in groups["db_slave"] and slave_status.Is_Replica
